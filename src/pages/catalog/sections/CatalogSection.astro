---
import CardImg from "@components/Catalog/CardImg.astro";
import { getGames } from "../../../api/rawg";
---

<section class="catalog">
	<h1 class="catalog__title">catalog</h1>
	<span class="catalog__container">
		{
			async () => {
				let page = 1;
				return getGames(`page=${page}`).then((games) => {
					return games.results.map((game) => {
						return (
							<CardImg
								src={game.background_image}
								alt={game.name}
								title={game.name}
								rating={game.rating}
								genres={game.genres}
							/>
						);
					});
				});
			}
		}
	</span>
	<span class="catalog__container__buttons">
		<button class="catalog__container__buttons--prev">Prev</button>
		<button class="catalog__container__buttons--next">Next</button>
	</span>
</section>

<style>
	.catalog {
		text-align: center;
	}

	.catalog__container {
		width: auto;
		margin: 0 auto;
		display: grid;
		justify-items: center;
		grid-template-columns: repeat(4, 1fr);
		grid-template-rows: repeat(4, 1fr);
		gap: 1rem;
	}

	.catalog__container__buttons {
		display: flex;
		justify-content: center;
		gap: 1rem;
		margin: 1rem 0 5rem 0;
	}

	h4 {
		margin: 0;
		color: #fff;
		font-size: 1.2rem;
	}
	.catalog__container__card {
		height: calc(100vh / 3);
		object-fit: cover; /* Similar a background-size: cover */
		display: block;
		overflow: hidden;
		border-radius: 10px;
		position: relative;
		box-shadow: 5px 4px 10px #000000e0;
		transition: all 0.3s ease-in-out;
		&:hover {
			cursor: pointer;
			transform: scale(1.05);
		}
		&:hover .catalog__container__card--body {
			height: 50%;
			display: block;
			opacity: 1;
		}
	}
	.catalog__container__card--img {
		height: 100%;
		display: block; /* Centra la imagen y evita espacios extraños */
		object-fit: cover; /* Similar a background-size: cover */
	}
	.catalog__container__card--body {
		height: 0%;
		/* display: none; */
		opacity: 0;
		z-index: 1;
		position: absolute;
		text-align: left;
		bottom: 0;
		left: 0;
		right: 0;
		background-color: rgba(0, 0, 0, 0.7);
		color: #fff;
		padding: 0.5rem 1rem;
		transition: all 0.3s ease-in-out;
		& div {
			display: flex;
			justify-content: space-between;
		}
		& p {
			font-size: 0.9rem;
			line-height: 0.8rem;
			margin: 0;
			overflow: hidden;
			text-overflow: ellipsis;
		}
	}
</style>

<script>
	import { getGames } from "../../../api/rawg";
	import type { getGamesResponse } from "../../../type/rawgTypes";

	let currentPage = 1;

	const editCatalog = (page: number) => {
		getGames(`page=${page}`).then((json) => edidCards(json));
	};
	function drawStarsRating(rating: number) {
		let stars = "";
		for (let i = 0; i < rating; i++) {
			stars += "⭐";
		}
		return stars;
	}
	function edidCards(json: getGamesResponse) {
		const $cards = document.querySelectorAll(".catalog__container__card");
		$cards?.forEach(($card: Element, i) => {
			const $img = $card.querySelector(".catalog__container__card--img");
			$img?.setAttribute("src", json.results[i].background_image);
			const $title = $card.querySelector(".catalog__container__card--body h4");
			$title && ($title.textContent = json.results[i].name);
			const $rating = $card.querySelector(".catalog__container__card--body span");
			$rating && ($rating.textContent = drawStarsRating(json.results[i].rating));
			const $genres = $card.querySelector(".catalog__container__card--body div:nth-child(2)");
			$genres && ($genres.textContent = json.results[i].genres.map((g) => g.name).join(" "));
		});
	}

	// Siguiente pagina
	function siguientePag() {
		currentPage++;
		editCatalog(currentPage);
	}
	// Anterior pagina
	function anteriorPag() {
		if (currentPage > 1) {
			currentPage--;
			editCatalog(currentPage);
		}
	}
	// Event listener (btns sig-ant)
	const $btnPrev = document.querySelector(".catalog__container__buttons--prev");
	const $btnNext = document.querySelector(".catalog__container__buttons--next");

	$btnPrev?.addEventListener("click", anteriorPag);
	$btnNext?.addEventListener("click", siguientePag);

	// editCatalog(currentPage);

	// ------------------------------------
</script>
