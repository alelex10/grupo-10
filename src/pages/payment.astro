---
import "../pages/payment.css"
//Aqui importe el componente del buscar juegos para probrar su funcionalidad... posteriormente hay que sacarlo
import MainLayout from '../layouts/MainLayout.astro';
import PaymentCard from '../components/Target/PaymentCard.astro'
---
<MainLayout>
    <div class="payment">
        <div class="payment__container">
            <div class="payment__box">
                <h2 class="payment__title">Metodo de Pago</h2>
                <PaymentCard></PaymentCard>
                <form id="form-pago" class="payment__form">
                    <input class="payment__input" type="text" id="card-number" placeholder="1234 5678 9012 3456" maxlength="19" required />
                    <input class="payment__input" type="text" id="exp-date" placeholder="MM/YY" required />
                    <input class="payment__input" type="text" id="cvv-code" placeholder="CVV" maxlength="4" required />
                    <div class="payment__total">
                        Total a pagar: <span id="total-amount">$0.00</span>
                    </div>  
                    <button class="payment__button" type="submit">Confirmar compra</button>
                    <p id="mensaje" class="payment__mensaje"></p>
                </form>
                <div class="payment__success hidden" id="payment-success">
                    <h2 class="payment__success-title">Compra Exitosa!</h2>
                    <p class="payment__success-text">Gracias por su compra.</p>
                    <button id="volver-btn" class="payment__success-button">Volver</button>
                </div>
                  
            </div>
        </div>
    </div>
</MainLayout>

<script>
//emplee regex (mirar enalce: https://stackoverflow.com/questions/9315647/regex-credit-card-number-tests)
document.addEventListener("DOMContentLoaded", () => {
    // Acceso a elementos
    const $ = id => document.getElementById(id);
  
    const visaIcon = $("icon-visa") as HTMLInputElement;
    const masterCardIcon = $("icon-master") as HTMLInputElement;

    const form = $("form-pago") as HTMLInputElement;
    const messageEl = $("mensaje") as HTMLInputElement;
    const cardInput = $("card-number") as HTMLInputElement;
    const dateInput = $("exp-date") as HTMLInputElement;
    const cvvInput = $("cvv-code") as HTMLInputElement;

    const message = {
        invalidCard: type => `Tarjeta invalida (${type === "Unknown" ? "desconocida" : type})`,
        invalidDate: "Fecha de vencimiento invalida",
        invalidCVV: "Codigo de seguridad invalido",
        success: "Se realizo la compra!"
    };

    //----------------------------------------------------------------------
    function onlyDigits(str) {
        return str.replace(/\D/g, "");
    }

    function getCardType(number) {
        const d = onlyDigits(number);
        if (/^4\d{12}(\d{3})?$/.test(d)) return "Visa";
        if (/^5[1-5]\d{14}$/.test(d) || /^2(2[2-9]|[3-6]|7[01])\d{12}$/.test(d)) return "MasterCard";
        return "Unknown";
    }

    //------------------------------- funcion que busque de internet, valida numero de tarjetas de forma simple perfecta para la simulacion: https://www.geeksforgeeks.org/luhn-algorithm/ ---------------
    function luhnCheck(number) {
        const digits = onlyDigits(number).split("").reverse().map(Number);
        const sum = digits.reduce((acc, digit, i) => {
        if (i % 2) {
            digit *= 2;
            if (digit > 9) digit -= 9;
        }
        return acc + digit;
        }, 0);
        return sum % 10 === 0;
    }

    //-------------------------------------------VALIDACIONES--------------------------------------------------------

    function isValidCard(number) {
        const type = getCardType(number);
        const valid = luhnCheck(number) && type !== "Unknown";
        return { type, valid };
    }

    function isValidDate(value) {
        const [mm, yy] = value.split("/").map(Number);
        if (!mm || !yy) return false;
        const expDate = new Date(2000 + yy, mm);
        return mm >= 1 && mm <= 12 && expDate > new Date();
    }

    function isValidCVV(value) {
        return /^\d{3,4}$/.test(value);
    }

    //--------------------------------------------------------------------------------

    function showMessage(text, color) {
        messageEl.textContent = text;
        messageEl.style.color = color;
    }

    function updateIcons(number) {
        const type = getCardType(number);
        visaIcon.style.opacity = type === "Visa" ? "1" : "0.2";
        masterCardIcon.style.opacity = type === "MasterCard" ? "1" : "0.2";
    }

    //----------------------------------- formateo de los datos ingresados del usurio---------------
    function formatCardNumber(value) {
        const d = onlyDigits(value).slice(0, 16);
        return d.match(/.{1,4}/g)?.join(" ") || "";
    }

    function formatDate(value) {
        const d = onlyDigits(value).slice(0, 4);
        return d.length > 2 ? `${d.slice(0, 2)}/${d.slice(2)}` : d;
    }

    function formatCVV(value) {
        return onlyDigits(value).slice(0, 4);
    }

    //mostrar precio total en funcion de la wishlits, se alimenta de datos del storage
    function getWishlistFromStorage() {
        try {
            const raw = localStorage.getItem("wishlist");
            if (!raw) return [];
            return JSON.parse(raw);
        } catch (e) {
            console.error("Error al leer wishlist:", e);
            return [];
        }
    }

    function renderTotal(games) {
        const total = games.reduce((acc, game) => acc + (game.price || 0), 0);
        $("total-amount").textContent = `$${total.toFixed(2)}`;
    }

    const wishlist = getWishlistFromStorage();
    renderTotal(wishlist);


    //---------------------------------- eventos de los inputs----------------------
    cardInput.addEventListener("input", e => {
        const input = e.target as HTMLInputElement;
        const formatted = formatCardNumber(input.value);
        cardInput.value = formatted;
        updateIcons(formatted);
    });

    dateInput.addEventListener("input", e => {
        const input = e.target as HTMLInputElement;
        dateInput.value = formatDate(input.value);
    });

    cvvInput.addEventListener("input", e => {
        const input = e.target as HTMLInputElement;
        cvvInput.value = formatCVV(input.value);
    });

    updateIcons(cardInput.value);

    //---------------------------Interaccion visual con componente tarjeta-------
    function updateCardVisual() {
    const number = cardInput.value;
    const date = dateInput.value || "MM/YY";
    const digits = onlyDigits(number);
    const type = getCardType(number);

    $("card-number-preview").textContent = digits.length ? formatCardNumber(number) : "**** **** **** 0000";
    $("card-date-preview").textContent = date;

    const card = $("card-preview");

    if (type === "Visa") {
        card.style.background = "linear-gradient(135deg, #f6d365, #fda085)";
    } else if (type === "MasterCard") {
        card.style.background = "linear-gradient(135deg, #84fab0, #8fd3f4)";
    } else {
        card.style.background = "linear-gradient(135deg, var(--secondary-background-color), var(--primary-background-color))";
        }
    }
    cardInput.addEventListener("input", updateCardVisual);
    dateInput.addEventListener("input", updateCardVisual);
    $("name-card")?.addEventListener("input", updateCardVisual);


    //-----------------------------------Evento compra-----------------------------------------
    const successLayer = $("payment-success");
    const volverBtn = $("volver-btn");

    form.addEventListener("submit", e => {
        e.preventDefault();

        const card = isValidCard(cardInput.value);
        const dateOk = isValidDate(dateInput.value);
        const cvvOk = isValidCVV(cvvInput.value);

        if (!card.valid) return showMessage(message.invalidCard(card.type), "red");
        if (!dateOk) return showMessage(message.invalidDate, "red");
        if (!cvvOk) return showMessage(message.invalidCVV, "red");

        showMessage("", "");

        setTimeout(() => {
            successLayer.classList.add("show");
        }, 500);
    });
    //------------------ al efectuar la compra redirege a pagina index.js,----------------------------
    volverBtn.addEventListener("click", () => {
        window.location.href = "/";
    });

});
